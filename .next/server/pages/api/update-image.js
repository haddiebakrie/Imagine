"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/update-image";
exports.ids = ["pages/api/update-image"];
exports.modules = {

/***/ "formidable":
/*!*****************************!*\
  !*** external "formidable" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("formidable");

/***/ }),

/***/ "sharp":
/*!************************!*\
  !*** external "sharp" ***!
  \************************/
/***/ ((module) => {

module.exports = require("sharp");

/***/ }),

/***/ "file-type":
/*!****************************!*\
  !*** external "file-type" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("file-type");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "./pages/api/update-image.ts":
/*!***********************************!*\
  !*** ./pages/api/update-image.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__) => {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var file_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! file-type */ \"file-type\");\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! formidable */ \"formidable\");\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(formidable__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sharp */ \"sharp\");\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sharp__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([file_type__WEBPACK_IMPORTED_MODULE_0__]);\nfile_type__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? await __webpack_async_dependencies__ : __webpack_async_dependencies__)[0];\n\n\n\n\nconst config = {\n    api: {\n        bodyParser: false\n    }\n};\nconst OUTPUT_ARR = [\n    \"png\",\n    \"jpeg\",\n    \"webp\"\n];\nconst streamToBuffer = async (stream)=>{\n    const buffer = [];\n    return new Promise((resolve, reject)=>stream.on(\"error\", (err)=>reject(err)\n        ).on(\"data\", (data)=>buffer.push(data)\n        ).on(\"end\", ()=>resolve(Buffer.concat(buffer))\n        )\n    );\n};\nasync function handler(req, res) {\n    const form = new formidable__WEBPACK_IMPORTED_MODULE_1__.IncomingForm({\n        maxFields: 2,\n        maxFileSize: 5 * 1024 * 1024\n    });\n    form.parse(req, async (err, fields, files)=>{\n        if (err) {\n            return res.status(400).json({\n                message: \"Something went wrong\"\n            });\n        }\n        const { file  } = files;\n        if (!file.length) {\n            let buff;\n            try {\n                buff = await streamToBuffer(fs__WEBPACK_IMPORTED_MODULE_2___default().createReadStream(file.filepath));\n            } catch (_) {\n                return res.status(400).json({\n                    message: \"Can not read sent image\"\n                });\n            }\n            const types = await (0,file_type__WEBPACK_IMPORTED_MODULE_0__.fileTypeFromBuffer)(buff);\n            if (!types || types.mime.split(\"/\")[0] !== \"image\") {\n                return res.status(400).json({\n                    message: \"File is not a valid image\"\n                });\n            }\n            const { quality , output  } = fields;\n            if (!quality || typeof quality !== \"string\") return res.status(400).json({\n                message: \"Quality has to be a valid field\"\n            });\n            const intQuality = parseInt(quality);\n            if (isNaN(intQuality)) return res.status(400).json({\n                message: \"Quality needs to be a valid string float\"\n            });\n            if (intQuality > 100) return res.status(400).json({\n                message: \"Quality can't be higher than 100%\"\n            });\n            if (intQuality < 10) return res.status(400).json({\n                message: \"Quality can't be lower than 10%\"\n            });\n            if (!output || typeof output !== \"string\") return res.status(400).json({\n                message: \"Output needs to be a valid string\"\n            });\n            if (!OUTPUT_ARR.find((o)=>o === output\n            )) return res.status(400).json({\n                message: \"Please select a valid output\"\n            });\n            switch(output){\n                case \"png\":\n                    buff = await sharp__WEBPACK_IMPORTED_MODULE_3___default()(buff).png({\n                        quality: intQuality\n                    }).toBuffer();\n                    break;\n                case \"webp\":\n                    buff = await sharp__WEBPACK_IMPORTED_MODULE_3___default()(buff).webp({\n                        quality: intQuality\n                    }).toBuffer();\n                    break;\n                case \"jpeg\":\n                default:\n                    buff = await sharp__WEBPACK_IMPORTED_MODULE_3___default()(buff).jpeg({\n                        quality: intQuality,\n                        mozjpeg: true\n                    }).toBuffer();\n                    break;\n            }\n            res.status(200).json({\n                base64: buff.toString(\"base64\")\n            });\n        } else {\n            res.status(400).json({\n                message: \"You can only compress a single image at a time\"\n            });\n        }\n    });\n};\n\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/api/update-image.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/api/update-image.ts"));
module.exports = __webpack_exports__;

})();